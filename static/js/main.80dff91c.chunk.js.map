{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","blurVal","setBlurVal","brightVal","setBrightVal","useFileUpload","files","selectFiles","style","paddingLeft","width","paddingTop","fontSize","marginBottom","fontWeight","autoHeight","autoHeightMin","parseInt","window","innerHeight","id","src","source","alt","filter","marginRight","axis","xstep","xmin","xmax","x","onChange","parseFloat","position","right","bottom","Button","onClick","accept","domtoimage","toJpeg","document","getElementById","quality","then","dataUrl","link","createElement","download","Date","valueOf","href","click","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wQAiGeA,MAvFf,WAAgB,IAAD,EACiBC,mBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEqBF,mBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGgBC,YAAc,MAH9B,mBAGNC,EAHM,KAGCC,EAHD,KAgBb,OACE,mCACE,sBAAKC,MAAO,CAAEC,YAAa,KAAMC,MAAO,MAAOC,WAAY,MAA3D,UACE,oDACA,mBAAGH,MAAO,CAAEI,SAAU,SAAtB,sIAGA,sBAAKJ,MAAO,CAAEK,aAAc,QAA5B,UACE,qBAAKL,MAAO,CAAEM,WAAY,QAA1B,0DACCR,EACC,cAAC,aAAD,CACES,YAAU,EACVC,cAAeC,SAA8B,GAArBC,OAAOC,YAAmB,IAFpD,SAIE,qBACEC,GAAG,mBACHC,IAAG,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAOgB,OACZC,IAAI,UACJf,MAAO,CACLgB,OAAO,QAAD,OAAUvB,EAAV,0BAAmC,IAAME,EAAzC,WAKZ,8GAGJ,gCACE,gCACE,sBAAMK,MAAO,CAAEM,WAAY,OAAQW,YAAa,QAAhD,gCAGA,cAAC,IAAD,CACEC,KAAK,IACLC,MAAO,GACPC,KAAM,EACNC,KAAM,GACNC,EAAG7B,EACH8B,SAAU,gBAAGD,EAAH,EAAGA,EAAH,OAAW5B,EAAW8B,WAAWF,UAG/C,gCACE,sBAAMtB,MAAO,CAAEM,WAAY,OAAQW,YAAa,QAAhD,gCAGA,cAAC,IAAD,CACEC,KAAK,IACLE,KAAM,EACNC,KAAM,IACNC,EAAG3B,EACH4B,SAAU,gBAAGD,EAAH,EAAGA,EAAH,OAAW1B,EAAaa,SAASa,EAAG,WAGlD,sBAAKtB,MAAO,CAAEyB,SAAU,WAAYC,MAAO,MAAOC,OAAQ,OAA1D,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,kBAAM9B,EAAY,CAAE+B,OAAQ,aACrC9B,MAAO,CAAEiB,YAAa,QAFxB,4CAMA,cAACW,EAAA,EAAD,CAAQC,QAAS,WAtEzBE,IACGC,OAAOC,SAASC,eAAe,oBAAqB,CAAEC,QAAS,KAC/DC,MAAK,SAASC,GACb,IAAMC,EAAOL,SAASM,cAAc,KACpCD,EAAKE,SAAL,WAAmB,IAAIC,MAAOC,UAA9B,QACAJ,EAAKK,KAAON,EACZC,EAAKM,YAgED,gCAGJ,qBAAK5C,MAAO,CAAEyB,SAAU,WAAYE,OAAQ,EAAGD,MAAO,GAAtD,SACE,gEC9EKmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,SAM1BW,M","file":"static/js/main.80dff91c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport Slider from \"react-input-slider\";\nimport { useFileUpload } from \"use-file-upload\";\nimport domtoimage from \"dom-to-image\";\nimport { Button } from \"react-bootstrap\";\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [blurVal, setBlurVal] = useState(0.0);\n  const [brightVal, setBrightVal] = useState(0);\n  const [files, selectFiles] = useFileUpload(null);\n\n  const download = () => {\n    domtoimage\n      .toJpeg(document.getElementById(\"download-element\"), { quality: 0.9 })\n      .then(function(dataUrl) {\n        const link = document.createElement(\"a\");\n        link.download = `${new Date().valueOf()}.jpg`;\n        link.href = dataUrl;\n        link.click();\n      });\n  };\n\n  return (\n    <>\n      <div style={{ paddingLeft: \"4%\", width: \"96%\", paddingTop: \"2%\" }}>\n        <h4>Background Creator</h4>\n        <p style={{ fontSize: \"small\" }}>\n          ぼかしと暗さを編集して背景を作成しよう。\n        </p>\n        <div style={{ marginBottom: \"10px\" }}>\n          <div style={{ fontWeight: \"bold\" }}>プレビュー(原寸)</div>\n          {files ? (\n            <Scrollbars\n              autoHeight\n              autoHeightMin={parseInt(window.innerHeight * 0.6, 10)}\n            >\n              <img\n                id=\"download-element\"\n                src={files?.source}\n                alt=\"preview\"\n                style={{\n                  filter: `blur(${blurVal}px) brightness(${100 - brightVal}%)`,\n                }}\n              />\n            </Scrollbars>\n          ) : (\n            <div>右下から画像を選択してね</div>\n          )}\n        </div>\n        <div>\n          <div>\n            <span style={{ fontWeight: \"bold\", marginRight: \"20px\" }}>\n              ぼかし\n            </span>\n            <Slider\n              axis=\"x\"\n              xstep={0.1}\n              xmin={0}\n              xmax={20}\n              x={blurVal}\n              onChange={({ x }) => setBlurVal(parseFloat(x))}\n            />\n          </div>\n          <div>\n            <span style={{ fontWeight: \"bold\", marginRight: \"20px\" }}>\n              暗く　\n            </span>\n            <Slider\n              axis=\"x\"\n              xmin={0}\n              xmax={100}\n              x={brightVal}\n              onChange={({ x }) => setBrightVal(parseInt(x, 10))}\n            />\n          </div>\n          <div style={{ position: \"absolute\", right: \"4vw\", bottom: \"4vh\" }}>\n            <Button\n              onClick={() => selectFiles({ accept: \"image/*\" })}\n              style={{ marginRight: \"20px\" }}\n            >\n              画像を選択\n            </Button>\n            <Button onClick={() => download()}>保存</Button>\n          </div>\n        </div>\n        <div style={{ position: \"absolute\", bottom: 0, right: 1 }}>\n          <span>© 2020 izumiz-dev</span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}