{"version":3,"sources":["DropUpload.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["DropUpload","setFile","onDrop","acceptedFiles","image","length","isImage","path","URL","createObjectURL","getRootProps","getInputProps","style","height","width","border","borderRadius","fontSize","file","type","includes","App","useState","blurVal","setBlurVal","brightVal","setBrightVal","paddingLeft","paddingTop","marginBottom","fontWeight","autoHeight","autoHeightMin","parseInt","window","innerHeight","id","src","alt","filter","marginRight","axis","xstep","xmin","xmax","x","onChange","parseFloat","position","right","bottom","Button","onClick","domtoimage","toJpeg","document","getElementById","quality","then","dataUrl","link","createElement","download","Date","valueOf","href","click","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c248d67.chunk.js","sourcesContent":["import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nexport const DropUpload = ({ setFile }) => {\n  return (\n    <Dropzone\n      onDrop={(acceptedFiles) => {\n        const image = acceptedFiles[acceptedFiles.length - 1];\n        if (isImage(image)) {\n          const path = URL.createObjectURL(image);\n          setFile(path);\n          // setShowNotifi(false);\n        } else {\n          // setShowNotifi(true);\n        }\n      }}\n    >\n      {({ getRootProps, getInputProps }) => (\n        <section>\n          <div\n            {...getRootProps()}\n            style={{\n              height: \"100px\",\n              width: \"80wv\",\n              border: \"dashed #AAAAAA 2px\",\n              borderRadius: \"6px\",\n              fontSize: \"small\",\n            }}\n          >\n            <input {...getInputProps()} />\n            <p>\n              クリックで画像ファイルを選択\n              <br />\n              もしくは、画像をドラッグ＆ドロップ\n            </p>\n          </div>\n        </section>\n      )}\n    </Dropzone>\n  );\n};\n\nconst isImage = (file) => file.type.includes(\"image\");\n","import React, { useState } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport Slider from \"react-input-slider\";\nimport domtoimage from \"dom-to-image\";\nimport { Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport { DropUpload } from \"./DropUpload\";\n// import { Notification } from \"./Notification\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport const App = () => {\n  const [blurVal, setBlurVal] = useState(0.0);\n  const [brightVal, setBrightVal] = useState(0);\n  const [file, setFile] = useState(null);\n  // const [showNotifi, setShowNotifi] = useState(true);\n\n  const download = () => {\n    domtoimage\n      .toJpeg(document.getElementById(\"download-element\"), { quality: 0.9 })\n      .then(function(dataUrl) {\n        const link = document.createElement(\"a\");\n        link.download = `${new Date().valueOf()}.jpg`;\n        link.href = dataUrl;\n        link.click();\n      });\n  };\n\n  return (\n    <>\n      {/* <Notification message={\"画像を選択してください\"} isShow={showNotifi} /> */}\n      <div style={{ paddingLeft: \"4%\", width: \"96%\", paddingTop: \"2%\" }}>\n        <h4>Background Creator</h4>\n        <p style={{ fontSize: \"small\" }}>\n          ぼかしと暗さを編集して背景を作成しよう。\n          <br />\n          画像サイズが大きいとバグって真っ黒になることがあります。（検証中）\n        </p>\n        <div style={{ marginBottom: \"10px\" }}>\n          <div style={{ fontWeight: \"bold\" }}>プレビュー(原寸)</div>\n          {file ? (\n            <Scrollbars\n              autoHeight\n              autoHeightMin={parseInt(window.innerHeight * 0.6, 10)}\n            >\n              <img\n                id=\"download-element\"\n                src={file}\n                alt=\"preview\"\n                style={{\n                  filter: `blur(${blurVal}px) brightness(${100 - brightVal}%)`,\n                }}\n              />\n            </Scrollbars>\n          ) : (\n            <DropUpload setFile={setFile} />\n          )}\n        </div>\n        <div>\n          <div>\n            <span style={{ fontWeight: \"bold\", marginRight: \"20px\" }}>\n              ぼかし\n            </span>\n            <Slider\n              axis=\"x\"\n              xstep={0.1}\n              xmin={0}\n              xmax={20}\n              x={blurVal}\n              onChange={({ x }) => setBlurVal(parseFloat(x))}\n            />\n          </div>\n          <div>\n            <span style={{ fontWeight: \"bold\", marginRight: \"20px\" }}>\n              暗く　\n            </span>\n            <Slider\n              axis=\"x\"\n              xmin={0}\n              xmax={100}\n              x={brightVal}\n              onChange={({ x }) => setBrightVal(parseInt(x, 10))}\n            />\n          </div>\n          <div style={{ position: \"absolute\", right: \"4vw\", bottom: \"4vh\" }}>\n            <Button\n              style={{ marginRight: \"20px\" }}\n              onClick={() => setFile(null)}\n            >\n              別の画像を選択\n            </Button>\n            <Button onClick={() => download()}>保存</Button>\n          </div>\n        </div>\n        <div style={{ position: \"absolute\", bottom: 0, right: 1 }}>\n          <span>© 2020 izumiz-dev</span>\n        </div>\n      </div>\n    </>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}